= Simple I18n Inflector for Rails

<b>i18n-inflector-rails version <tt>1.0</tt></b> (<b><tt>Sexparty</tt></b>)



* https://rubygems.org/gems/i18n-inflector-rails
* https://github.com/siefca/i18n-inflector-rails/tree
* mailto:pw@gnu.org

== Summary

This Rails plug-in contains bindings for the I18n Inflector module for Ruby's I18n.
It overwrites the translate() method from Rails in a way that it will
interpolate additional inflection tokens present in translations.
These tokens may appear in *patterns* which are contained within
<tt>@{</tt> and <tt>}</tt> symbols.

== Why?

It's intended to be used in a projects where tranlations are performed
by many people, yet there is a need to substitute fragments of text
depending on user's gender, person or other data.

To achieve similar functionality lambdas can be used but including
proc objects in translations may be considered as the unsafe idea.

If you have a troop of happy translators that shouldn't have the
ability to execute any code yet you need some simple inflection
then you should use this module.

== Synopsis

  translate('.welcome')

===== In a YAML file:

  en:
    welcome:  "Dear @{f:Lady|m:Sir|n:You|All}"
  
  en:
    i18n:
      inflections:
        gender:
          f:        "female"
          m:        "male"
          n:        "neuter"
          @female:  @f
          @male:    @m
          @neuter:  @n
          man:      @male
          woman:    @female
          default:  neuter

===== In a controller:

  class ApplicationController < ActionController::Base
    
    inflection_method :gender
    
    # assuming that @gender is set somewhere
    def gender
      @gender || nil
    end
  
  end

  class UsersController < ApplicationController
    
    # t() will call method gender() from the current context
    # to get the inflection token
    def say_welcome
      t('welcome')
      # => "Dear Sir"
    end
  
  end
  
== Description

You can choose different kinds (gender, title, person, time, author, etc.)
of tokens to group them in a meaningful, semantical sets. That means you can
apply I18n Inflector to do simple inflection by a gender or a person, when some
language requires it.

This module adds +inflection_method+ clause that can be used
in controllers and views. Using that clause makes it easy to register
methods that will be called to obtain mentioned inflection options.

This module uses i18n-inflector[https://rubygems.org/gems/i18n-inflector]
module which allows passing inflection options to the translate method.
You may find i18n-inflector default objects very helpful since they
allow you to read inflection data in many different ways. You may, for
example, use it to generate forms containing languages that are using inflection,
all known inflection kinds or tokens assigned to them. To access default inflector
bound to default I18n backend use:
  I18n.inflector

See {whole documentation}[http://rubydoc.info/gems/i18n-inflector-rails/] for more info about the usage.
To understand how the I18n Inflector works please read {I18n Inflector documentation}[http://rubydoc.info/gems/i18n-inflector/file/README.rdoc].

== Requirements

* i18n-inflector[https://rubygems.org/gems/i18n-inflector]
* actionpack[https://rubygems.org/gems/actionpack]
* rake[https://rubygems.org/gems/rake]
* rubygems[http://docs.rubygems.org/]

== Download

==== Source code

* https://github.com/siefca/i18n-inflector-rails/tree
* <tt>git clone git://github.com/siefca/i18n-inflector-rails.git</tt>

==== Gem

* https://rubygems.org/gems/i18n-inflector-rails

== Installation

* <tt>sudo gem install i18n-inflector-rails</tt>

== Specs

You can run RSpec examples both with

* <tt>rake spec</tt> or just <tt>rake</tt>
* run a test file directly, e.g. <tt>ruby -Ilib -Ispec spec/inflector_spec.rb</tt>

== More information

See {whole documentation}[http://rubydoc.info/gems/i18n-inflector-rails/] for more info about the usage.

See {I18n::Inflector::Rails} module documentation for detailed information.

== Credits

{Heise Media Polska}[http://www.heise-online.pl/] supports Free Software and has
contributed to this plug-in by paying for me to eat when I've been coding.

== License

Copyright (c) 2011 by Paweł Wilk.

i18n-inflector-rails is copyrighted software owned by Paweł Wilk (pw@gnu.org).
You may redistribute and/or modify this software as long as you
comply with either the terms of the LGPL (see {file:LGPL-LICENSE}),
or Ruby's license (see {file:COPYING}).

THIS SOFTWARE IS PROVIDED "AS IS" AND WITHOUT ANY EXPRESS
OR IMPLIED WARRANTIES, INCLUDING, WITHOUT LIMITATION,
THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
FOR A PARTICULAR PURPOSE.
